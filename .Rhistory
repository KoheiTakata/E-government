select(c("year", "country_text_id", VD_vars))
data_merged <-data_EGOV %>%
left_join(data_PS_temp, by = c("Survey.Year" = "year", "ID" = "country_text_id")) %>%
left_join(data_VD_temp, by = c("Survey.Year" = "year", "ID" = "country_text_id"))
write.csv(data_merged, "./data/data_merged.csv")
install.package("CARTOGRAPHY")
install.packages("CARTOGRAPHY")
yes
install.packages("cartography")
library(cartography)
#install.packages("cartography")
library(cartography)
# Load data
data(nuts2006)
# Build a choropleth
choroLayer(spdf = nuts2.spdf, df = nuts2.df, var = "pop2008" , legend.pos = "right")
title("Population in 2008")
View(nuts2.spdf)
library(tidyverse)
data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region",
caption = "Source: UN E-Government Development Index \n
Region is based on the UN.") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1, y=0.7, label= "World Average")
library(tidyverse)
data_EGOV_ori <- read.csv("./data/EGOV_DATA.csv")
region_list   <- read.csv("./data/all.csv")
region_list   <- read.csv("./data/Country_list.csv")
data_EGOV_ori <- read.csv("./data/EGOV_DATA.csv")
region_list   <- read.csv("./data/Country_list.csv")
library(tidyverse)
data_EGOV_ori <- read.csv("./data/EGOV_DATA.csv")
region_list   <- read.csv("./data/Country_list.csv")
region_list_sub <- region_list %>%
select(name, region) %>%
rename("Country" =  name)
data_EGOV_temp <- data_EGOV_ori %>%
mutate(Country = ifelse(str_sub(Country.Name, start = -1, end = -1) == " ", #delete the last white space
str_sub(Country.Name, start =  1, end = -2),
Country.Name)) %>%
left_join(region_list_sub, by = "Country")
# Na cleaning
no_match_list  <- unique(data_EGOV_temp$Country.Name[is.na(data_EGOV_temp$region)]) # countries with no match
#no_match_list
no_match_table <- data.frame(Country = no_match_list,
region = c("Asia", "Europe", "Americas", "Africa", "Europe",
"Asia", "Africa", "Asia", "Americas", "Africa"))
# re-merge
data_EGOV <- data_EGOV_temp %>%
left_join(no_match_table, by = c("Country.Name" = "Country")) %>%
mutate(region = ifelse(is.na(region.x), region.y, region.x)) %>%
select(-c(region.x, region.y))
#sum(is.na(data_EGOV$region)) #confirmation
chart_1 <- data_EGOV %>%
filter(Survey.Year ==2020) %>%
ggplot(aes(y = E.Government.Index, color = region, fill = region, )) +
#aes(x = stat(count)/sum(stat(count))) +
geom_density(alpha = 1/10) +
labs(title   = "Distribution of E-Government Index : 2020",
x       = "Density",
y       = "E-Government Index",
caption = "Source: UN E-Government Development Index \n
Region is based on the UN.")
chart_1
#ggsave("chart_1.png", chart_1)
data_EGOV_region <- read.csv("./data/EGOV_REGION_DATA_2020_EGDI.csv")
data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region",
caption = "Source: UN E-Government Development Index \n
Region is based on the UN.") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1, y=0.7, label= "World Average")
ggsave(filename = "chart_2.png")
data_EGOV_region <- read.csv("./data/EGOV_REGION_DATA_2020_EGDI.csv")
chart_2 <- data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region",
caption = "Source: UN E-Government Development Index \n
Region is based on the UN.") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1, y=0.7, label= "World Average")
ggsave(filename = "chart_2.png")
gridExtra::grid.arrange(chart_1, chart_2)
install.packages("gridExtra")
#install.packages("gridExtra")
gridExtra::grid.arrange(chart_1, chart_2)
#install.packages("gridExtra")
gridExtra::grid.arrange(chart_1, chart_2, nrow = 1)
chart_1 <- data_EGOV %>%
filter(Survey.Year ==2020) %>%
ggplot(aes(y = E.Government.Index, color = region, fill = region, )) +
#aes(x = stat(count)/sum(stat(count))) +
geom_density(alpha = 1/10) +
labs(title   = "Distribution of E-Government Index : 2020",
x       = "Density",
y       = "E-Government Index",
caption = "Source: UN E-Government Development Index \n
Region is based on the UN.")
chart_2 <- data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
#                coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region",
caption = "Source: UN E-Government Development Index \n
Region is based on the UN.") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1, y=0.7, label= "World Average")
gridExtra::grid.arrange(chart_1, chart_2, nrow = 1)
chart_2 <- data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
#                coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region",
caption = "Source: UN E-Government Development Index \n
Region is based on the UN.") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1, y=0.7, label= "World Average")+
theme(legend.position = "none")
chart_2 <- data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
#                coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region",
caption = "Source: UN E-Government Development Index \n
Region is based on the UN.") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1, y=0.7, label= "World Average")+
theme(legend.position = "none")
gridExtra::grid.arrange(chart_1, chart_2, nrow = 1)
chart_2 <- data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
#                coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region",
caption = "Source: UN E-Government Development Index \n
Region is based on the UN.") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1, y=0.7, label= "World Average")+
theme(legend.position = "none")
gridExtra::grid.arrange(chart_1, chart_2, nrow = 1)
chart_2 <- data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
#                coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region",
caption = "Source: UN E-Government Development Index \n
Region is based on the UN.") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1.2, y=0.7, label= "World Average")+
theme(legend.position = "none")
gridExtra::grid.arrange(chart_1, chart_2, nrow = 1)
chart_2 <- data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
#                coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region",
caption = "Source: UN E-Government Development Index \n
Region is based on the UN.") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1.4, y=0.7, label= "World Average")+
theme(legend.position = "none")
gridExtra::grid.arrange(chart_1, chart_2, nrow = 1)
chart_1 <- data_EGOV %>%
filter(Survey.Year ==2020) %>%
ggplot(aes(y = E.Government.Index, color = region, fill = region, )) +
#aes(x = stat(count)/sum(stat(count))) +
geom_density(alpha = 1/10) +
labs(title   = "Distribution of E-Government Index : 2020",
x       = "Density",
y       = "E-Government Index")
chart_2 <- data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
#                coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region",
caption = "Source: UN E-Government Development Index \n
Region is based on the UN.") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1.4, y=0.7, label= "World Average")+
theme(legend.position = "none")
gridExtra::grid.arrange(chart_1, chart_2, nrow = 1)
chart_2 <- data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
#                coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1.4, y=0.7, label= "World Average")+
theme(legend.position = "none")
#install.packages("gridExtra")
chart_1 <- data_EGOV %>%
filter(Survey.Year ==2020) %>%
ggplot(aes(y = E.Government.Index, color = region, fill = region, )) +
#aes(x = stat(count)/sum(stat(count))) +
geom_density(alpha = 1/10) +
labs(title   = "Distribution of E-Government Index : 2020",
x       = "Density",
y       = "E-Government Index",
caption = "Source: UN E-Government Development Index \n
Region is based on the UN.")
chart_2 <- data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
#                coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1.4, y=0.7, label= "World Average")+
theme(legend.position = "none")
gridExtra::grid.arrange(chart_2, chart_1, nrow = 1)
#install.packages("gridExtra")
chart_1 <- data_EGOV %>%
filter(Survey.Year ==2020) %>%
ggplot(aes(y = E.Government.Index, color = region, fill = region, )) +
#aes(x = stat(count)/sum(stat(count))) +
geom_density(alpha = 1/10) +
labs(title   = "Distribution of E-Government Index : 2020",
x       = "Density",
y       = "E-Government Index",
caption = "Source: UN E-Government Development Index \n
Region classificstion is based on the UN.")
chart_2 <- data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
#                coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1.4, y=0.7, label= "World Average")+
theme(legend.position = "none")
gridExtra::grid.arrange(chart_2, chart_1, nrow = 1)
#install.packages("gridExtra")
chart_1 <- data_EGOV %>%
filter(Survey.Year ==2020) %>%
ggplot(aes(y = E.Government.Index, color = region, fill = region, )) +
#aes(x = stat(count)/sum(stat(count))) +
geom_density(alpha = 1/10) +
labs(title   = "Distribution of E-Government Index : 2020",
x       = "Density",
y       = "E-Government Index",
caption = "Source: UN E-Government Development Index \n
Region classificstion is based on the UN.")
chart_2 <- data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
#                coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region",
caption= "  ") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1.4, y=0.7, label= "World Average")+
theme(legend.position = "none")
gridExtra::grid.arrange(chart_2, chart_1, nrow = 1)
#install.packages("gridExtra")
chart_1 <- data_EGOV %>%
filter(Survey.Year ==2020) %>%
ggplot(aes(y = E.Government.Index, color = region, fill = region, )) +
#aes(x = stat(count)/sum(stat(count))) +
geom_density(alpha = 1/10) +
labs(title   = "Distribution of E-Government Index : 2020",
x       = "Density",
y       = "E-Government Index",
caption = "Source: UN E-Government Development Index \n
Region classificstion is based on the UN.")
chart_2 <- data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
#                coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region",
caption= "   \n  ") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1.4, y=0.7, label= "World Average")+
theme(legend.position = "none")
gridExtra::grid.arrange(chart_2, chart_1, nrow = 1)
#install.packages("gridExtra")
chart_1 <- data_EGOV %>%
filter(Survey.Year ==2020) %>%
ggplot(aes(y = E.Government.Index, color = region, fill = region, )) +
#aes(x = stat(count)/sum(stat(count))) +
geom_density(alpha = 1/10) +
labs(title   = "",
x       = "Density",
y       = "E-Government Index",
caption = "Source: UN E-Government Development Index \n
Region classificstion is based on the UN.")
chart_2 <- data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
#                coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region",
caption= "   \n  ") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1.4, y=0.7, label= "World Average")+
theme(legend.position = "none")
gridExtra::grid.arrange(chart_2, chart_1, nrow = 1)
#install.packages("gridExtra")
chart_1 <- data_EGOV %>%
filter(Survey.Year ==2020) %>%
ggplot(aes(y = E.Government.Index, color = region, fill = region, )) +
#aes(x = stat(count)/sum(stat(count))) +
geom_density(alpha = 1/10) +
labs(title   = "",
x       = "Density",
y       = "E-Government Index",
caption = "Source: UN E-Government Development Index \n
Regional classificstion is based on the UN.")
chart_2 <- data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
#                coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region",
caption= "   \n  ") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1.4, y=0.7, label= "World Average")+
theme(legend.position = "none")
gridExtra::grid.arrange(chart_2, chart_1, nrow = 1)
#install.packages("gridExtra")
chart_1 <- data_EGOV %>%
filter(Survey.Year ==2020) %>%
ggplot(aes(y = E.Government.Index, color = region, fill = region, )) +
#aes(x = stat(count)/sum(stat(count))) +
geom_density(alpha = 1/10) +
labs(title   = "",
x       = "Density",
y       = "E-Government Index",
caption = "Source: UN E-Government Development Index \n
Regional classificstion is based on the UN.")
chart_2 <- data_EGOV_region %>%
filter(Region.or.Country != "World") %>%
rename("Region" = Region.or.Country) %>%
ggplot(aes(x = Region, y = X2020.EGDI.Average,
color = Region, fill = Region))+
geom_bar(stat ="identity", alpha = 5/10) +
#                coord_flip()+
labs(title  = "E-Government Index by Region: 2020",
y      = "E-Government Index",
x      = "Region",
caption= "   \n  ") +
geom_hline(aes(yintercept =
data_EGOV_region$X2020.EGDI.Average[data_EGOV_region$Region.or.Country == "World"])) +
annotate("text", x=1.4, y=0.7, label= "World Average")+
theme(legend.position = "none")
gridExtra::grid.arrange(chart_2, chart_1, nrow = 1)
ggsave(filename = "chart_3.png")
ggsave(filename = "chart_3.png", chart_3)
chart_3 <- gridExtra::grid.arrange(chart_2, chart_1, nrow = 1)
ggsave(filename = "chart_3.png", chart_3)
help(ggsave)
ggsave(filename = "chart_3.png", chart_3, width = 10, height = 8 )
ggsave(filename = "chart_3.png", chart_3, width = 10, height = 6 )
help(ggsave)
data_merged$v2psswitch
data_VD$v2psswitch
data_VD$v2psswitch
data_VD$v2pscohesv
data_VD$v2pscnslnl
data_VD$v2psprlnks
data_VD$v2psorgs
data_VD$v2psprbrch
install.packages("vdemdata")
readRDS("./data/V-Dem-CY-Full+Others-v12.rds")
temp <- readRDS("./data/V-Dem-CY-Full+Others-v12.rds")
data_PS       <- readRDS("./data/V-Dem-CY-Full+Others-v12.rds")
data_VD       <- readRDS("./data/V-Dem-CY-Full+Others-v12.rds")
data_EGOV_ori <- read.csv("./data/EGOV_DATA.csv")
region_list   <- read.csv("./data/Country_list.csv")
data_PS       <- read_dta("./data/ps_data.dta")
data_VD       <- readRDS("./data/V-Dem-CY-Full+Others-v12.rds")
region_list_sub1 <- region_list %>%
select(name, region) %>%
rename("Country" =  name)
region_list_sub2 <- region_list %>%
select(name, alpha.3) %>%
rename("Country" =  name) %>%
rename("ID" =  alpha.3)
data_EGOV_temp <- data_EGOV_ori %>%
mutate(Country = ifelse(str_sub(Country.Name, start = -1, end = -1) == " ", #delete the last white space
str_sub(Country.Name, start =  1, end = -2),
Country.Name)) %>%
left_join(region_list_sub1, by = "Country")
# Na cleaning
no_match_list  <- unique(data_EGOV_temp$Country.Name[is.na(data_EGOV_temp$region)]) # countries with no match
#no_match_list
no_match_table <- data.frame(Country = no_match_list,
region = c("Asia", "Europe", "Americas", "Africa", "Europe",
"Asia", "Africa", "Asia", "Americas", "Africa"),
ID     = c("KOR", "MDA", "BOL", "CIV", "CZE",
"PRK","COD", "GEO", "VEN", "TZA"))
# re-merge
data_EGOV <- data_EGOV_temp %>%
left_join(no_match_table, by = c("Country.Name" = "Country")) %>%
mutate(region = ifelse(is.na(region.x), region.y, region.x)) %>%
select(-c(region.x, region.y)) %>%
left_join(region_list_sub2, by = "Country") %>%
mutate(ID = ifelse(is.na(ID.x), ID.y, ID.x)) %>%
select(-c(ID.x, ID.y))
#sum(is.na(data_EGOV$region)) #confirmation
rm(list = ls())
library(tidyverse)
library(haven)
data_EGOV_ori <- read.csv("./data/EGOV_DATA.csv")
region_list   <- read.csv("./data/Country_list.csv")
data_PS       <- read_dta("./data/ps_data.dta")
data_VD       <- readRDS("./data/V-Dem-CY-Full+Others-v12.rds")
